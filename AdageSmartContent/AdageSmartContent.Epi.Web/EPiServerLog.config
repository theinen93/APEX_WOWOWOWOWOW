<elmah>
  <security allowRemoteAccess="1" />
  <errorLog type="Elmah.XmlFileErrorLog, Elmah" logPath="PATH_TO_ERROR_FOLDER" />
  <errorMail from="CLIENT_BUGS@adagetech.com" to="YOUR_TEAM_ELMAH@adagetech.com" subject="CLIENT Error - {1} - {0}" async="true" smtpPort="25" smtpServer="mail.adagetech.com" />
  <errorFilter>
    <test>
      <or>
        <!--UNIVERSAL-->
        <equal binding="Context.Request.ServerVariables['URL']" value="/ScriptResource.axd" type="String" />
        <equal binding="Context.Request.ServerVariables['URL']" value="/WebResource.axd" type="String" />
        <regex binding="Context.Request.ServerVariables['HTTP_USER_AGENT']" pattern="Googlebot" caseSensitive="true" />
        <regex binding="Exception.StackTrace" pattern="ViewStateException" caseSensitive="false" />
        <regex binding="Exception.Message" pattern="A potentially dangerous Request.Path" caseSensitive="false" />
        <regex binding="Exception.Message" pattern="Failed to Execute URL" caseSensitive="false" />
        <regex binding="Exception.Message" pattern="Illegal characters in path." caseSensitive="false" />
        <regex binding="BaseException.Message" pattern="System.Threading.Thread.AbortInternal()" caseSensitive="false" />
        <regex binding="Exception.Message" pattern="System.Threading.Thread.AbortInternal()" caseSensitive="false" />
        <regex binding="BaseException.Message" pattern="System.Threading.Thread.AbortInternal()" caseSensitive="false" />
        <regex binding="Exception.Message" pattern="Thread was being aborted." caseSensitive="false" />
        <regex binding="Context.Request.ServerVariables['HTTP_USER_AGENT']" pattern="EasyDL" caseSensitive="true" />
        <regex binding="Context.Request.ServerVariables['HTTP_USER_AGENT']" pattern="ScanAlert" caseSensitive="true" />
        <regex binding="Context.Request.ServerVariables['HTTP_USER_AGENT']" pattern="Ezooms" caseSensitive="true" />
        <regex binding="Context.Request.ServerVariables['HTTP_USER_AGENT']" pattern="ZmEu" caseSensitive="true" />
        <regex binding="Context.Request.ServerVariables['HTTP_USER_AGENT']" pattern="crawler" caseSensitive="false" />
        <regex binding="Context.Request.ServerVariables['HTTP_USER_AGENT']" pattern="bot" caseSensitive="false" />
        <regex binding="Context.Request.ServerVariables['HTTP_USER_AGENT']" pattern="lurp" caseSensitive="false" />
        <regex binding="Context.Request.ServerVariables['HTTP_USER_AGENT']" pattern="spider" caseSensitive="false" />
        
        
        <!--TESSITURA SPECIFIC-->
        <regex binding="Exception.Message" pattern="TESSITURA_SEAT_LOCKING_EXCEPTION" caseSensitive="false" />
        <regex binding="BaseException.Message" pattern="TESSITURA_SEAT_LOCKING_EXCEPTION" caseSensitive="false" />
        <regex binding="Exception.Message" pattern="TESSITURA_ACCESS_DENIED_EXCEPTION" caseSensitive="false" />
        <regex binding="BaseException.Message" pattern="TESSITURA_ACCESS_DENIED_EXCEPTION" caseSensitive="false" />
        <regex binding="Exception.Message" pattern="TESSITURA_SEATSERVER_EXCEPTION:Error 50000" caseSensitive="false" />
        <regex binding="BaseException.Message" pattern="TESSITURA_SEATSERVER_EXCEPTION:Error 50000" caseSensitive="false" />
        
        <!--ON THE FENCE-->
        <equal binding="HttpStatusCode" value="404" type="Int32" />
        <regex binding="BaseException.Message" pattern="The file '/[^']+' does not exist" />
        <regex binding="BaseException.Message" pattern="Invalid length for a Base-64 char array" />
        <regex binding="BaseException.Message" pattern="Input string was not in a correct format" />
        <regex binding="BaseException.Message" pattern="The input is not a valid Base-64 string" />
        <is-type binding="BaseException" type="System.IO.FileNotFoundException" />
      </or>
    </test>
  </errorFilter>
</elmah>
